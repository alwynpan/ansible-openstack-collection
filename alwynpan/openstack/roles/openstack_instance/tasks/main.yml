# SPDX-License-Identifier: MIT-0
---
- name: Create an instance
  openstack.cloud.server:
    cloud: "{{ cloud }}"
    auth:
      project_name: "{{ project_name }}"
    auto_ip: false
    availability_zone: "{{ availability_zone }}"
    flavor: "{{ item.flavor }}"
    image: "{{ item.image }}"
    key_name: "{{ item.key_name }}"
    name: "{{ item.name }}"
    nics: "{{ item.networks }}"
    security_groups: "{{ item.security_groups }}"
    state: present
    timeout: "600"
  loop: "{{ instances }}"
  register: os_instance

- name: Wait for connection
  ansible.builtin.wait_for:
    host: "{{ item.server.access_ipv4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: "{{ os_instance.results }}"
  when: item.server is defined

- name: Add host
  ansible.builtin.add_host:
    hostname: "{{ item.item.name }}"
    groups: "{{ host_group }}"
    ansible_host: "{{ item.server.access_ipv4 }}"
    # internal_ip: "{{ item.openstack.private_v4 | default(omit) }}"
  loop: "{{ os_instance.results }}"
  when: item.server is defined

- name: Create inventory file
  community.general.ini_file:
    path: "{{ playbook_dir }}/hosts.ini"
    section: "{{ host_group }}"
    option: "{{ item.item.name }} ansible_host"
    value: "{{ item.server.access_ipv4 }}"
    backup: true
    no_extra_spaces: true
    mode: "0644"
  loop: "{{ os_instance.results }}"
  when: item.server is defined

- name: Attach volume to instance
  openstack.cloud.server_volume:
    cloud: "{{ cloud }}"
    auth:
      project_name: "{{ project_name }}"
    server: "{{ item.0.name }}"
    volume: "{{ item.1.vol_name_prefix }}@{{ item.0.name }}"
    device: "{{ item.1.device }}"
    state: present
  loop: "{{ lookup('subelements', instances, 'volumes', {'skip_missing': True}) }}"
